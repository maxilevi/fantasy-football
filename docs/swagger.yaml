basePath: /api/
definitions:
  Credentials:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  Token:
    properties:
      token:
        type: string
    type: object
  httputil.HTTPError:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  models.CreatePlayer:
    properties:
      age:
        example: 25
        type: integer
      country:
        example: Germany
        type: string
      first_name:
        example: Audrey
        type: string
      last_name:
        example: Hepburn
        type: string
      market_value:
        example: 25000
        type: integer
      position:
        example: 1
        type: integer
      team:
        type: integer
    type: object
  models.CreateUser:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  models.ShowPlayer:
    properties:
      age:
        example: 25
        type: integer
      country:
        example: Germany
        type: string
      first_name:
        example: Audrey
        type: string
      id:
        type: integer
      last_name:
        example: Hepburn
        type: string
      market_value:
        example: 25000
        type: integer
      position:
        example: 1
        type: integer
    type: object
  models.ShowTeam:
    properties:
      budget:
        type: integer
      country:
        type: string
      id:
        type: integer
      market_value:
        type: integer
      name:
        type: string
      players:
        items:
          $ref: '#/definitions/models.ShowPlayer'
        type: array
    type: object
  models.ShowUser:
    properties:
      email:
        type: string
      id:
        type: integer
      team:
        $ref: '#/definitions/models.ShowTeam'
    type: object
  models.UpdatePlayer:
    properties:
      age:
        example: 25
        type: integer
      country:
        example: Germany
        type: string
      first_name:
        example: Audrey
        type: string
      last_name:
        example: Hepburn
        type: string
      market_value:
        example: 25000
        type: integer
      position:
        example: 1
        type: integer
      team:
        type: integer
    type: object
  models.UpdateUser:
    properties:
      email:
        type: string
      team:
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: Fantasy football manager microservice.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Fantasy football manager API
  version: "1.0"
paths:
  /player:
    post:
      consumes:
      - application/json
      description: Create a player
      parameters:
      - description: Create player
        in: body
        name: player
        required: true
        schema:
          $ref: '#/definitions/models.CreatePlayer'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      security:
      - BearerAuth: []
      summary: Create a player
      tags:
      - Players
  /player/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes a player
      parameters:
      - description: Player ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      security:
      - BearerAuth: []
      summary: Delete a player
      tags:
      - Players
    get:
      consumes:
      - application/json
      description: Get a player by ID
      parameters:
      - description: Player ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ShowPlayer'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Show a player
      tags:
      - Players
    patch:
      consumes:
      - application/json
      description: Update a player
      parameters:
      - description: Update player
        in: body
        name: player
        required: true
        schema:
          $ref: '#/definitions/models.UpdatePlayer'
      - description: Player ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      security:
      - BearerAuth: []
      summary: Update a player
      tags:
      - Players
  /session:
    post:
      consumes:
      - application/json
      description: Creates a new session for a given set of credentials, returns a
        JWT token to be used as Bearer token.
      parameters:
      - description: Credentials
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/Credentials'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Token'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Create a new session
      tags:
      - Session
  /team:
    post:
      consumes:
      - application/json
      description: Create a new team
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      security:
      - BearerAuth: []
      summary: Post a team
      tags:
      - Teams
  /team/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a team and all of it's players
      parameters:
      - description: Team ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      security:
      - BearerAuth: []
      summary: Delete a team
      tags:
      - Teams
    get:
      consumes:
      - application/json
      description: Get team by ID
      parameters:
      - description: Team ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ShowTeam'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Get a team
      tags:
      - Teams
    patch:
      consumes:
      - application/json
      description: Update a team
      parameters:
      - description: Team ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      security:
      - BearerAuth: []
      summary: Update a team
      tags:
      - Teams
  /user:
    post:
      consumes:
      - application/json
      description: Register a new user
      parameters:
      - description: CreateUser
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.CreateUser'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      security:
      - BearerAuth: []
      summary: Create a user
      tags:
      - Users
  /user/{id}:
    delete:
      consumes:
      - application/json
      description: Delete user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      security:
      - BearerAuth:
        - write
        - admin
      summary: Delete a user
      tags:
      - Users
    get:
      consumes:
      - application/json
      description: Get user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ShowUser'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Get a user
      tags:
      - Users
    patch:
      consumes:
      - application/json
      description: Update user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: UpdateUser data
        in: body
        name: email
        required: true
        schema:
          $ref: '#/definitions/models.UpdateUser'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      security:
      - BearerAuth:
        - admin
      summary: Update a user
      tags:
      - Users
  /user/me:
    get:
      consumes:
      - application/json
      description: Get user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ShowUser'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      security:
      - BearerAuth:
        - write
        - admin
      summary: Get the logged in user
      tags:
      - Users
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
