basePath: /api/
definitions:
  CreatePlayer:
    properties:
      age:
        example: 25
        type: integer
      country:
        example: Germany
        type: string
      first_name:
        example: Audrey
        type: string
      last_name:
        example: Hepburn
        type: string
      market_value:
        example: 25000
        type: integer
      position:
        description: This is the position identifier 0 for goalkeeper, 1 for defender,
          2 for goalkeeper, 3 for attacker
        example: 1
        maximum: 3
        minimum: 0
        type: integer
    required:
    - age
    - country
    - first_name
    - last_name
    - market_value
    - position
    type: object
  CreateTransfer:
    properties:
      ask:
        type: integer
      player_id:
        type: integer
    required:
    - ask
    - player_id
    type: object
  CreateUser:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  Credentials:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  HTTPError:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  ShowPlayer:
    properties:
      age:
        example: 25
        type: integer
      country:
        example: Germany
        type: string
      first_name:
        example: Audrey
        type: string
      id:
        type: integer
      last_name:
        example: Hepburn
        type: string
      market_value:
        example: 25000
        type: integer
      position:
        description: This is the position identifier 0 for goalkeeper, 1 for defender,
          2 for goalkeeper, 3 for attacker
        example: 1
        maximum: 3
        minimum: 0
        type: integer
    type: object
  ShowTeam:
    properties:
      budget:
        type: integer
      country:
        type: string
      id:
        type: integer
      market_value:
        type: integer
      name:
        type: string
      players:
        items:
          $ref: '#/definitions/ShowPlayer'
        type: array
    type: object
  ShowTransfer:
    properties:
      ask:
        type: integer
      id:
        type: integer
      player:
        $ref: '#/definitions/ShowPlayer'
    type: object
  ShowUser:
    properties:
      email:
        type: string
      id:
        type: integer
      team:
        $ref: '#/definitions/ShowTeam'
    type: object
  Token:
    properties:
      token:
        type: string
    type: object
  UpdatePlayer:
    properties:
      age:
        example: 25
        type: integer
      country:
        example: Germany
        type: string
      first_name:
        example: Audrey
        type: string
      last_name:
        example: Hepburn
        type: string
      market_value:
        example: 25000
        type: integer
      position:
        description: This is the position identifier 0 for goalkeeper, 1 for defender,
          2 for goalkeeper, 3 for attacker
        example: 1
        maximum: 3
        minimum: 0
        type: integer
      team:
        type: integer
    type: object
  UpdateTeam:
    properties:
      budget:
        type: integer
      country:
        type: string
      name:
        type: string
    type: object
  UpdateTransfer:
    properties:
      ask:
        type: integer
    type: object
  UpdateUser:
    properties:
      email:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: Fantasy football manager microservice.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Fantasy football manager API
  version: "1.0"
paths:
  /me:
    get:
      consumes:
      - application/json
      description: Get user by ID
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ShowUser'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/HTTPError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/HTTPError'
      security:
      - BearerAuth:
        - write
        - admin
      summary: Get the logged in user
      tags:
      - Me
  /me/team:
    get:
      consumes:
      - application/json
      description: Get the logged in user's team
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ShowUser'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/HTTPError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/HTTPError'
      security:
      - BearerAuth: []
      summary: Get the logged in user's team
      tags:
      - Me
    patch:
      consumes:
      - application/json
      description: Edit the logged in user's team
      parameters:
      - description: Update team payload
        in: body
        name: team
        required: true
        schema:
          $ref: '#/definitions/UpdateTeam'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/HTTPError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/HTTPError'
      security:
      - BearerAuth: []
      summary: Edit the logged in user's team
      tags:
      - Me
  /me/team/players:
    get:
      consumes:
      - application/json
      description: Get the logged in user's team players
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ShowPlayer'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/HTTPError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/HTTPError'
      security:
      - BearerAuth: []
      summary: Get the logged in user's team players
      tags:
      - Me
  /me/team/players/{id}:
    get:
      consumes:
      - application/json
      description: Get the logged in user's team player
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ShowPlayer'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/HTTPError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/HTTPError'
      security:
      - BearerAuth: []
      summary: Get the logged in user's team player
      tags:
      - Me
  /players/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes a player
      parameters:
      - description: Player ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/HTTPError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/HTTPError'
      security:
      - BearerAuth: []
      summary: Delete a player
      tags:
      - Players
    get:
      consumes:
      - application/json
      description: Get a player by ID
      parameters:
      - description: Player ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ShowPlayer'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/HTTPError'
      summary: Show a player
      tags:
      - Players
    patch:
      consumes:
      - application/json
      description: Update a player
      parameters:
      - description: Update player
        in: body
        name: player
        required: true
        schema:
          $ref: '#/definitions/UpdatePlayer'
      - description: Player ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/HTTPError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/HTTPError'
      security:
      - BearerAuth: []
      summary: Update a player
      tags:
      - Players
  /sessions:
    post:
      consumes:
      - application/json
      description: Creates a new session for a given set of credentials, returns a
        JWT token to be used as Bearer token.
      parameters:
      - description: Credentials
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/Credentials'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Token'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/HTTPError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/HTTPError'
      summary: Create a new session
      tags:
      - Session
  /team/players/{id}:
    patch:
      consumes:
      - application/json
      description: Get the logged in user's team players
      parameters:
      - description: Update player
        in: body
        name: player
        required: true
        schema:
          $ref: '#/definitions/UpdatePlayer'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/HTTPError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/HTTPError'
      security:
      - BearerAuth: []
      summary: Edit the logged in user's team players
      tags:
      - Me
  /teams:
    post:
      consumes:
      - application/json
      description: Create a new team
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/HTTPError'
      security:
      - BearerAuth: []
      summary: Post a team
      tags:
      - Teams
  /teams/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a team and all of it's players
      parameters:
      - description: Team ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/HTTPError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/HTTPError'
      security:
      - BearerAuth: []
      summary: Delete a team and all of it's players
      tags:
      - Teams
    get:
      consumes:
      - application/json
      description: Get team by ID
      parameters:
      - description: Team ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ShowTeam'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/HTTPError'
      summary: Get a team
      tags:
      - Teams
    patch:
      consumes:
      - application/json
      description: Update a team
      parameters:
      - description: Team ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update team payload
        in: body
        name: team
        required: true
        schema:
          $ref: '#/definitions/UpdateTeam'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/HTTPError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/HTTPError'
      security:
      - BearerAuth: []
      summary: Update a team
      tags:
      - Teams
  /teams/{id}/players:
    get:
      consumes:
      - application/json
      description: List all the players of a team
      parameters:
      - description: Team ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ShowPlayer'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/HTTPError'
      summary: List players of a team
      tags:
      - Teams
    post:
      consumes:
      - application/json
      description: Create a player on a new team
      parameters:
      - description: Create player
        in: body
        name: player
        required: true
        schema:
          $ref: '#/definitions/CreatePlayer'
      - description: Team ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/HTTPError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/HTTPError'
      security:
      - BearerAuth: []
      summary: Create a player on a new team
      tags:
      - Teams
  /teams/{teamId}/players/{id}:
    get:
      consumes:
      - application/json
      description: Get a player by ID from a team.
      parameters:
      - description: Player ID
        in: path
        name: id
        required: true
        type: integer
      - description: Team ID
        in: path
        name: teamId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ShowPlayer'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/HTTPError'
      summary: Show a player from a team
      tags:
      - Teams
    patch:
      consumes:
      - application/json
      description: Update a player from a team
      parameters:
      - description: Update player
        in: body
        name: player
        required: true
        schema:
          $ref: '#/definitions/UpdatePlayer'
      - description: Player ID
        in: path
        name: id
        required: true
        type: integer
      - description: Team ID
        in: path
        name: teamId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/HTTPError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/HTTPError'
      security:
      - BearerAuth: []
      summary: Update a player from a team
      tags:
      - Teams
  /transfers:
    get:
      consumes:
      - application/json
      description: Show all transfers and filter by country, team name, player name,
        age and value
      parameters:
      - description: Filter by the player's country
        in: query
        name: country
        type: string
      - description: Filter by the player's team name
        in: query
        name: team_name
        type: string
      - description: Filter by the player's complete name
        in: query
        name: player_name
        type: string
      - description: Filter by the player's age
        in: query
        name: min_age
        type: string
      - description: Filter by the player's age
        in: query
        name: max_age
        type: string
      - description: Filter by the transfer ask value
        in: query
        name: min_value
        type: string
      - description: Filter by the transfer ask value
        in: query
        name: max_value
        type: string
      - description: Type of value to filter by. Can be 'market' or 'ask'. Defaults
          to 'ask'
        in: query
        name: value_type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ShowTransfer'
            type: array
      summary: Show all transfers
      tags:
      - Transfers
    post:
      consumes:
      - application/json
      description: Create a new transfer
      parameters:
      - description: Create transfer
        in: body
        name: transfer
        required: true
        schema:
          $ref: '#/definitions/CreateTransfer'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/HTTPError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/HTTPError'
      security:
      - BearerAuth: []
      summary: Create a new transfer
      tags:
      - Transfers
  /transfers/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a transfer by ID
      parameters:
      - description: Transfer ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/HTTPError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/HTTPError'
      security:
      - BearerAuth:
        - write
        - admin
      summary: Delete a transfer
      tags:
      - Transfers
    get:
      consumes:
      - application/json
      description: Get a transfer by ID
      parameters:
      - description: Transfer ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ShowTransfer'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/HTTPError'
      summary: Show a transfer
      tags:
      - Transfers
    patch:
      consumes:
      - application/json
      description: Updates a existing transfer by ID
      parameters:
      - description: Transfer ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update transfer
        in: body
        name: transfer
        required: true
        schema:
          $ref: '#/definitions/UpdateTransfer'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/HTTPError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/HTTPError'
      security:
      - BearerAuth:
        - write
        - admin
      summary: Updates a existing transfer.
      tags:
      - Transfers
  /transfers/{id}/buy:
    put:
      consumes:
      - application/json
      description: Buys a transfer with a specific id and buys it. Updates budgets,
        values and finally deletes the transfer.
      parameters:
      - description: Transfer ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/HTTPError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/HTTPError'
      security:
      - BearerAuth: []
      summary: Buy a transfer
      tags:
      - Transfers
  /users:
    post:
      consumes:
      - application/json
      description: Register a new user
      parameters:
      - description: CreateUser
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/CreateUser'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/HTTPError'
      security:
      - BearerAuth: []
      summary: Create a user
      tags:
      - Users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user by ID and all of it's associated resources
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/HTTPError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/HTTPError'
      security:
      - BearerAuth:
        - write
        - admin
      summary: Delete a user and all of it's associated resources
      tags:
      - Users
    get:
      consumes:
      - application/json
      description: Get user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ShowUser'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/HTTPError'
      summary: Get a user
      tags:
      - Users
    patch:
      consumes:
      - application/json
      description: Update user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: UpdateUser data
        in: body
        name: email
        required: true
        schema:
          $ref: '#/definitions/UpdateUser'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/HTTPError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/HTTPError'
      security:
      - BearerAuth:
        - admin
      summary: Update a user
      tags:
      - Users
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
